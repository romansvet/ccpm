{
  "permissions": {
    "allow": [
      "Bash(.claude/scripts/test-and-log.sh:*)",
      "Bash(.claude/scripts/pm/*)",
      "Bash(find .claude/*:*)",
      "Bash(find tests/*:*)",
      "Bash(find . -name \"*.py\":*)",
      "Bash(find . -name \"*.sh\":*)",
      "Bash(find . -name \"*.md\":*)",
      "Bash(gh --version)",
      "Bash(gh auth status)",
      "Bash(gh auth login)",
      "Bash(gh extension list)",
      "Bash(gh extension install yahsan2/gh-sub-issue)",
      "Bash(gh issue view:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue create:*)",
      "Bash(gh issue close:*)",
      "Bash(gh issue comment:*)",
      "Bash(gh repo view:*)",
      "Bash(gh repo set-default:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr list:*)",
      "Bash(gh run list:*)",
      "Bash(gh run watch:*)",
      "Bash(gh run view:*)",
      "Bash(gh workflow view:*)",
      "Bash(gh workflow list)",
      "Bash(gh api:*)",
      "Bash(git init)",
      "Bash(git add .)",
      "Bash(git add:*)",
      "Bash(git commit -m:*)",
      "Bash(git status)",
      "Bash(git status --porcelain)",
      "Bash(git diff)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git push:*)",
      "Bash(git push origin:*)",
      "Bash(git checkout:*)",
      "Bash(git fetch:*)",
      "Bash(git pull:*)",
      "Bash(git branch:*)",
      "Bash(git merge:*)",
      "Bash(git tag:*)",
      "Bash(git rev-parse --git-dir)",
      "Bash(git rev-parse:*)",
      "Bash(git config user.email:*)",
      "Bash(git config user.name:*)",
      "Bash(git config --get:*)",
      "Bash(git config --list)",
      "Bash(git remote get-url origin)",
      "Bash(git remote add origin:*)",
      "Bash(git remote -v)",
      "Bash(git remote:*)",
      "Bash(git clone --depth 1:*)",
      "Bash(git worktree:*)",
      "Bash(git stash:*)",
      "Bash(git show:*)",
      "Bash(git ls-files:*)",
      "Bash(git ls-tree:*)",
      "Bash(ls:*)",
      "Bash(ls -la)",
      "Bash(ls -d:*)",
      "Bash(mv .claude/*:*)",
      "Bash(mv .ccpm*:*)",
      "Bash(mv ccpm/*:*)",
      "Bash(npm test)",
      "Bash(npm run:*)",
      "Bash(npx:*)",
      "Bash(pnpm test)",
      "Bash(pnpm run:*)",
      "Bash(pytest:*)",
      "Bash(python -m pytest:*)",
      "Bash(python -m pip:*)",
      "Bash(python -m build)",
      "Bash(python -m ccpm:*)",
      "Bash(python -c:*)",
      "Bash(python setup.py:*)",
      "Bash(python:*)",
      "Bash(rm .claude/*:*)",
      "Bash(rm .ccpm*)",
      "Bash(rm -f .claude/*:*)",
      "Bash(rm -rf .ccpm_backup/*)",
      "Bash(rm -rf build/)",
      "Bash(rm -rf dist/)",
      "Bash(rm -rf *.egg-info/)",
      "Bash(ruff check:*)",
      "Bash(sed:*)",
      "Bash(touch .claude/*:*)",
      "Bash(touch .ccpm*)",
      "Bash(tree .claude:*)",
      "Bash(tree ccpm:*)",
      "Bash(chmod +x .claude/*:*)",
      "Bash(chmod +x ccpm/*:*)",
      "Bash(pip install build)",
      "Bash(pip install ccpm)",
      "Bash(pip install -e .)",
      "Bash(pip install git+https://github.com/automazeio/ccpm.git)",
      "Bash(pip show:*)",
      "Bash(pip list)",
      "Bash(ccpm:*)",
      "Bash(black:*)",
      "Bash(isort:*)",
      "Bash(flake8:*)",
      "Bash(cp .claude/*:*)",
      "Bash(cp ccpm/*:*)",
      "Bash(cp -r .claude/*:*)",
      "Bash(cp -r ccpm/*:*)",
      "List(**)",
      "WebFetch(domain:github.com)",
      "WebSearch"
    ],
    "additionalDirectories": [
      "/tmp/ccpm"
    ]
  }
}